name: "Smallnets_Alex1"

layer {
  name: "data"
  type: "RSImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "shatin-wv3/shatin-samples-mean.binaryproto"
  }
  rsimage_data_param {
    source: "shatin-wv3/train_image_samples_shatin.txt"
    batch_size: 66
    new_height: 256
    new_width: 256
    shuffle: true
  }
}

layer {
  name: "data"
  type: "RSImageData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "shatin-wv3/shatin-samples-mean.binaryproto"
  }
  rsimage_data_param {
    source: "shatin-wv3/test_image_samples_shatin.txt"
    batch_size: 5
    new_height: 256
    new_width: 256
  }
}


layer {
  name: "conv1-sn"
  type: "Convolution"
  bottom: "data"
  top: "conv1-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu1-sn"
  type: "ReLU"
  bottom: "conv1-sn"
  top: "conv1-sn"
}

layer {
  name: "pool1-sn"
  type: "Pooling"
  bottom: "conv1-sn"
  top: "pool1-sn"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2-sn"
  type: "Convolution"
  bottom: "pool1-sn"
  top: "conv2-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2-sn"
  type: "ReLU"
  bottom: "conv2-sn"
  top: "conv2-sn"
}

layer {
  name: "pool2-sn"
  type: "Pooling"
  bottom: "conv2-sn"
  top: "pool2-sn"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv3-sn"
  type: "Convolution"
  bottom: "pool2-sn"
  top: "conv3-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3-sn"
  type: "ReLU"
  bottom: "conv3-sn"
  top: "conv3-sn"
}


layer {
  name: "pool4-sn"
  type: "Pooling"
  bottom: "conv3-sn"
  top: "pool4-sn"
  pooling_param {
    pool: AVE
    kernel_size: 28
    stride: 1
  }
}

layer {
  name: "fc5-sn"
  type: "InnerProduct"
  bottom: "pool4-sn"
  top: "fc5-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu5-sn"
  type: "ReLU"
  bottom: "fc5-sn"
  top: "fc5-sn"
}

layer {
  name: "drop5-sn"
  type: "Dropout"
  bottom: "fc5-sn"
  top: "fc5-sn"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc6-sn"
  type: "InnerProduct"
  bottom: "fc5-sn"
  top: "fc6-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 11
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc6-sn"
  bottom: "label"
  top: "loss"
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc6-sn"
  bottom: "label"
  top: "accuracy"
}

