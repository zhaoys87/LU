name: "cnn_social_data_train_val"

layer {
  name: "data"
  type: "RSImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "social-shenzhen/sz-samples-mean.binaryproto"
  }
  rsimage_data_param {
    source: "social-shenzhen/social_hsr_tr_samples.txt"
    batch_size: 40
    new_height: 256
    new_width: 256
  }
}

layer {
  name: "data"
  type: "RSImageData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "social-shenzhen/sz-samples-mean.binaryproto"
  }
  rsimage_data_param {
    source: "social-shenzhen/social_hsr_te_samples.txt"
    batch_size: 5
    new_height: 256
    new_width: 256
  }
}

layer {
  name: "data2"
  type: "RSImageData"
  top: "data2"
  top: "label2"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "social-shenzhen/sz-social-data-mean.binaryproto"
  }
  rsimage_data_param {
    source: "social-shenzhen/social_soc_tr_samples.txt"
    batch_size: 40
  }
}

layer {
  name: "data2"
  type: "RSImageData"
  top: "data2"
  top: "label2"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "social-shenzhen/sz-social-data-mean.binaryproto"
  }
  rsimage_data_param {
    source: "social-shenzhen/social_soc_te_samples.txt"
    batch_size: 5
  }
}

layer {
  name: "conv1-sn"
  type: "Convolution"
  bottom: "data"
  top: "conv1-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}


layer {
  name: "relu1-sn"
  type: "ReLU"
  bottom: "conv1-sn"
  top: "conv1-sn"
}

layer {
  name: "pool1-sn"
  type: "Pooling"
  bottom: "conv1-sn"
  top: "pool1-sn"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2-sn"
  type: "Convolution"
  bottom: "pool1-sn"
  top: "conv2-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2-sn"
  type: "ReLU"
  bottom: "conv2-sn"
  top: "conv2-sn"
}

layer {
  name: "pool2-sn"
  type: "Pooling"
  bottom: "conv2-sn"
  top: "pool2-sn"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv3-sn"
  type: "Convolution"
  bottom: "pool2-sn"
  top: "conv3-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3-sn"
  type: "ReLU"
  bottom: "conv3-sn"
  top: "conv3-sn"
}

layer {
  name: "pool4-sn"
  type: "Pooling"
  bottom: "conv3-sn"
  top: "pool4-sn"
  pooling_param {
    pool: AVE
    kernel_size: 28
    stride: 1
  }
}

layer {
  name: "fc5-sn"
  type: "InnerProduct"
  bottom: "pool4-sn"
  top: "fc5-sn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu5-sn"
  type: "ReLU"
  bottom: "fc5-sn"
  top: "fc5-sn"
}

layer {
  name: "drop5-sn"
  type: "Dropout"
  bottom: "fc5-sn"
  top: "fc5-sn"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "conv1-so"
  type: "Convolution"
  bottom: "data2"
  top: "conv1-so"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu1-so"
  type: "ReLU"
  bottom: "conv1-so"
  top: "conv1-so"
}

layer {
  name: "norm1-so"
  type: "LRN"
  bottom: "conv1-so"
  top: "conv1-so"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  name: "pool1-so"
  type: "Pooling"
  bottom: "conv1-so"
  top: "pool1-so"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
}

layer {
  name: "conv2-so"
  type: "Convolution"
  bottom: "pool1-so"
  top: "conv2-so"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu2-so"
  type: "ReLU"
  bottom: "conv2-so"
  top: "conv2-so"
}

layer {
  name: "norm2-so"
  type: "LRN"
  bottom: "conv2-so"
  top: "conv2-so"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  name: "pool2-so"
  type: "Pooling"
  bottom: "conv2-so"
  top: "pool2-so"
  pooling_param {
    pool: MAX
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
}

layer {
  name: "conv3-so"
  type: "Convolution"
  bottom: "pool2-so"
  top: "conv3-so"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3-so"
  type: "ReLU"
  bottom: "conv3-so"
  top: "conv3-so"
}

layer {
  name: "norm3-so"
  type: "LRN"
  bottom: "conv3-so"
  top: "conv3-so"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  name: "pool3-so"
  type: "Pooling"
  bottom: "conv3-so"
  top: "pool3-so"
  pooling_param {
    pool: AVE
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
}

layer {
  name: "fc4-so"
  type: "InnerProduct"
  bottom: "pool3-so"
  top: "fc4-so"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 32
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu4-so"
  type: "ReLU"
  bottom: "fc4-so"
  top: "fc4-so"
}

layer {
  name: "drop4"
  type: "Dropout"
  bottom: "fc4-so"
  top: "fc4-so"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "concat"
  type: "Concat"
  bottom: "fc5-sn"
  bottom: "fc4-so"
  top: "concat-fc"
}

layer {
  name: "fc6-sos"
  type: "InnerProduct"
  bottom: "concat-fc"
  top: "fc6-sos"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 11
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc6-sos"
  bottom: "label"
  top: "loss"
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc6-sos"
  bottom: "label2"
  top: "accuracy"
}

